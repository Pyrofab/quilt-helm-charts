{{ if .Values.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-postgresql-backup
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 3600
      template:
        spec:
          containers:
            - name: backup
              image: {{ .Values.image }}
              imagePullPolicy: IfNotPresent
              command: ["/bin/sh", "-c"]
              args:
                - >
                  pg_dump {{ .Values.database.dbName }} --clean --if-exists --quote-all-identifiers --no-password --file=backup.pgdump &&
                  aws --endpoint {{ .Values.endpoint }} s3 cp backup.pgdump s3://quilt-backups/{{ .Release.Name }}/`date -I`.pgdump &&
                  aws --endpoint {{ .Values.endpoint }} s3 cp backup.pgdump s3://quilt-backups/latest/{{ .Release.Name }}.pgdump
              env:
                - name: PGUSER
                  value: {{ .Values.database.username }}
                - name: PGPASSWORD
                  value: {{ .Values.database.password }}
                - name: PGHOST
                  value: {{ tpl .Values.database.host . }}
                - name: PGPORT
                  value: '5432'
              envFrom:
                - secretRef:
                    # should contain AWS credentials environment variables
                    name: {{ .Values.awsSecretName }}
          restartPolicy: OnFailure
{{ end }}
